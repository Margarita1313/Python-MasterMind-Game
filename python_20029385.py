'''CSC1024 PROGRAMMING PRINCIPLES
Programming Project: A Master Mind Computer Game
By Lee Yuen Yao - 20029385'''

#create a new function to display the home screen
def home_screen():
    print()
    print(' '*11,'='*47)
    print(' '*11,'||*******The Master Mind Computer Game*******||', ''*10)
    print(' '*11,'='*47)
    print(' '*28,'by: yuenyao')
    print()
    print()
    print(' '*9,'Welcome to Master Mind -- the colour guessing game!')
    print()
    print(' '*22,' 1. Start the game')
    print(' '*22,' 2. How to Play ? ')
    print(' '*22,' 3. Exit ')
    print()

#create a new function to display how to play screen
def how_to_play():
    print()
    print()
    print(' '*11,'='*47)
    print(' '*11,'||**********How To Play Master Mind?*********||', ''*10)
    print(' '*11,'='*47)
    print()
    print(' 1. The colour set contains 6 different colours:')
    print('    Red(R), Blue(B), Green(G), Yellow(Y), White(W) and Pink(P).')
    print()
    print(' 2. The computer will then generate 4 random colours code from the colour set.')
    print()
    print(' 3. You will need to guess the sequence of colour pins generated by the computer.')
    print()
    print(' 4. To enter your guess, input the colour one at a time using the assigned alphabet for each colour:')
    print('    [R]-Red [B]-Blue [G]-Green [Y]-Yellow [W]-White [P]-Pink                         ')
    print('    Example: RYWP, means "Red, Yellow, White, Pink"                              ')
    print('    **Do keep in mind that the colour in the list might be repeated for more than once')
    print()
    print(' 5. After your guess, the computer will return the hints on the screen regarding:')
    print('    a) How many correct colours you get, and it is on the correct position, and')
    print('    b) How many correct colours you get, but it is on the wrong position.')
    print()
    print(' 6. You will need to improve your code based on the hints given and crack')
    print('    the colour code within 12 tries.')
    print()
    print('                               Have Fun !                                   ')
    print('                                 -----                                      ')
    print()
    
#create a new function to display the program end screen
def program_end():
    print()
    print(' '*11,'='*47)
    print(' '*11,'||*****Thank you for playing mastermind!*****||')
    print(' '*11,'||               Program Ended               ||')
    print(' '*11,'='*47)

#create a new function to check the validity of the guess code input by the user
def check_valid (guess_list):
    if len(guess_list) != len(random_list): #input not equal to 4
        print('Error: Please enter 4 alphabets for your guess only. Try entering again')
        valid = 0 #invalid input
        return valid #return 0 means the value is invalid
          
    else:
        for i in range(4):
            if guess_list[i] not in colour_list: #input not in the colour list
                print('Error: Invalid character. Please enter the assigned alphabet for you guess. Try entering again')
                valid = 0 #invalid input
                return valid #return 0 means the value is invalid


#Start the program 
opening = True
while opening:
    home_screen() #call the function to display home screen
    after_homescreen = True
    while after_homescreen: 
        welcome = input('          >>Please enter 1, 2 or 3: ')
        if welcome == '1' or welcome == '2' or welcome == '3': #if user enter 1,2,or 3, which are valid inputs
            
            #user wants to read the instruction
            if welcome == '2': 
                how_to_play() #call the function to display how to play screen
                print()
                #after reading the instructions
                not_ready = True
                while not_ready: 
                    ready = input('    >>Enter [1] to start the game and [2] to return to home screen: ')
                    
                    #user is ready to start the mastermind game
                    if ready == '1': 
                        print()
                        not_ready = False 
                        opening = False
                        after_homescreen = False 
                        repeat = True #enter the mastermind game
                        break
                    
                    #user is not ready and wants to return back to home screen
                    elif ready == '2': 
                        opening = True #loop back to the beginning to display home screen
                        after_homescreen = False 
                        break
                    
                    #invalid input (anything other than 1 and 2)
                    else: 
                        print('    Error: Please enter either [1] or [2] only.')
                        print()
                        not_ready = True #loop back and ask the user to re-enter their input

            #user wants to start the mastermind game          
            elif welcome == '1':
                print()
                not_ready = False
                opening = False
                after_homescreen = False
                repeat = True #enter the mastermind game
                break

            #welcome == '3', user wants to exit the program
            else: 
                opening = False
                after_homescreen = False
                not_ready = False
                repeat = False #skip the mastermind game loop and call the program_end function
                break

        else: #invalid input (anything other than 1, 2 and 3)
            print('          Error: Please enter either [1], [2] or [3] only.')
            print()
            after_homescreen = True #loop back and ask the user to re-enter their input
        
            
#Start mastermind game screen
while repeat: #repeat the game if repeat is True, user wants to play the game again.
    
    #colour available in this game
    colour_list = ['R', 'B', 'G', 'Y', 'W', 'P']
    #store correct colour code randomize by the computer
    random_list = []
    #store user's guess into a list
    guess_list = []

    #display the result to the user later
    join_store = []
    store_history = []

    #computer generate random colour code
    for colour in range(0,4):
        import random
        random_list.append(random.choice(colour_list)) #store random colour into random_list
        
    print()
    print(' '*11,'='*47)
    print(' '*11,'||*****************Start Game****************||', ''*10)
    print(' '*11,'='*47)
    print()
    print('       [R]-Red [B]-Blue [G]-Green [Y]-Yellow [W]-White [P]-Pink                         ')
    print()
    print()
    print('I am thinking of 4 colours code in sequence, guess my mind...')
    print()

    success = False
    attempt = 0 #initialize the num of attempt
    try_again = True
    while try_again:
        print()
        print('[Attempt : ', attempt + 1,']','-'*72)
        print()
        print('Guess the code')
        guess_list = input('>>Enter your guess: ').upper() #prompt user to input their guess
        guess_list = list(guess_list) #store their guess into guess_list
        display_list = []
        display_list = guess_list.copy() #display the code to the user
        print()
        print('Your guess for this round is: ',guess_list) #display their guess in list form
        print()
        valid = check_valid(guess_list) #call the check_valid function and return the validity of the guess_list

        #if guess_list is valid 
        if valid != 0:
            attempt += 1 #increase num of attempt
            while attempt <= 12: #user will have 12 tries to guess the correct colour code
                #if user's guess is correct, meaning their guess code is exactly same as the list generated by computer
                if guess_list == random_list:
                    print()
                    print('Wow, you are the mastermind!')
                    print('You have used', attempt, 'attempt(s) to guess my mind! Well-done! ')
                    try_again = False #don't have to try again
                    success = True #exit the loop
                    break

                #if user's guess is incorrect/partially correct
                else:
                    wrong_position = 0
                    correct = 0
                    for i in range(0,4):
                        #correct colour and correct position
                        if guess_list[i] == random_list[i]:
                            correct += 1
                            guess_list[i] += 'Corr'
                            random_list[i] += 'Corr'
                            
                    for i in range(0,4):
                        #correct colour but wrong position
                        if guess_list[i] != random_list[i] and guess_list[i] in random_list:
                            wrong_position += 1
                            random_list[random_list.index(guess_list[i])] += 'Corr'

                    for i in range(0,4):
                        if len(random_list[i]) > 1: #if 'Corr' was being added into the item in the random list
                            random_list[i] = (random_list[i])[0] #convert the item back to the original code 

                    #display the result to the user
                    store =(display_list, correct, wrong_position)
                    join_store = '             |            '.join(map(str,store))
                   
                    store_history.append(join_store)

                    print('='*88)
                    print('        Guess                    |',' Correct colour in       |',' Correct colour in       |')
                    print('                                 |  the correct position    |',' the wrong position      |')
                    print('='*88)
                    print(*store_history, sep = '\n')
                    print('='*88)
                    print()

                    #if user has already reached the last attempt (the 12th attempt)
                    if attempt == 12:
                        try_again = False #stop guessing
                        success = False
                        break

                    #during 1st-11th attempt
                    else: 
                        print('Opps, this is not the correct code in my mind. Try again.')
                        print()
                        try_again = True #keep guessing
                        success = False
                        break

        else:
            try_again = True
                
            
    #if user has successfully guessed the correct colour code
    if success == True:
        print('Game Over !')
        print()
        another_round = str(input('>>Would you like to play another round [Y/N]:' )).upper() #ask if they want to have another round

    #if user can't guess the correct code after 12 tries
    else:
        print('Unfortunately, you have used the maximum amount of attempts...')
        print('The correct code in my mind is ', random_list) #display the correct colour code
        print('Game Over !')
        print()
        another_round = str(input('>>Would you like to play another round [Y/N]:' )).upper() #ask if they want to have another round

    #check if their input is valid                                 
    respond_error = True
    while respond_error:
        if another_round == 'Y': #user wants to go for another round
            repeat = True #re-enter while loop to repeat the game
            break
        elif another_round == 'N':
            repeat = False #exit while loop and execute the next instruction
            break
        
        #invalid input (anything other than Y and N)
        else:
            print('Error: Please enter either Y or N')
            another_round = str(input('>>Would you like to play another round [Y/N]:' )).upper()
            respond_error = True #loop back and ask the user to re-enter their input


program_end() #call the program_end function and display the end screen  
